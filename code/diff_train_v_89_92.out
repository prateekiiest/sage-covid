21c21,22
< import lightgbm as lgb
---
> #import lightgbm as lgb
> import optuna.integration.lightgbm as lgb
23a25,26
> 
> 
27c30
<         n_features = X.shape[1] // 2
---
>         n_features = X.shape[1] // 3
51c54
<                 #X_ave_opt_selected = X_opt[:, 2*n_features:(2*n_features+n_features_selected)]
---
>                 X_ave_opt_selected = X_opt[:, 2*n_features:(2*n_features+n_features_selected)]
54c57
<                 #X_opt_selected = np.concatenate((X_opt_selected, X_ave_opt_selected), axis=1)
---
>                 X_opt_selected = np.concatenate((X_opt_selected, X_ave_opt_selected), axis=1)
70c73
<         #X_ave_selected = X[:, 2*n_features:(2*n_features+best_n_features_selected)]
---
>         X_ave_selected = X[:, 2*n_features:(2*n_features+best_n_features_selected)]
73c76
<         #X_selected = np.concatenate((X_selected, X_ave_selected), axis=1)
---
>         X_selected = np.concatenate((X_selected, X_ave_selected), axis=1)
126,132c129,135
< measurement_concept_ids_filename = "../../data/measurement_concept_ids.list"
< condition_concept_ids_filename = "../../data/condition_concept_ids.list"
< observation_concept_ids_filename = "../../data/observation_concept_ids.list"
< device_exposure_concept_ids_filename = "../../data/device_exposure_concept_ids.list"
< drug_exposure_concept_ids_filename = "../../data/drug_exposure_concept_ids.list"
< procedure_concept_ids_filename = "../../data/procedure_concept_ids.list"
< visit_concept_ids_filename = "../../data/visit_concept_ids.list"
---
> measurement_concept_ids_filename = "/model/measurement_concept_ids.list"
> condition_concept_ids_filename = "/model/condition_concept_ids.list"
> observation_concept_ids_filename = "/model/observation_concept_ids.list"
> device_exposure_concept_ids_filename = "/model/device_exposure_concept_ids.list"
> drug_exposure_concept_ids_filename = "/model/drug_exposure_concept_ids.list"
> procedure_concept_ids_filename = "/model/procedure_concept_ids.list"
> visit_concept_ids_filename = "/model/visit_concept_ids.list"
134c137
< gs = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/goldstandard.csv')
---
> gs = pd.read_csv('/data/goldstandard.csv')
141,142c144,145
< #measurement = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/measurement.csv',usecols = ['measurement_concept_id','value_as_number','person_id', 'measurement_date', 'measurement_time', 'value_as_concept_id'])
< measurement = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/measurement.csv',usecols = ['measurement_concept_id','value_as_number','person_id', 'measurement_date', 'measurement_time'])
---
> #measurement = pd.read_csv('/data/measurement.csv',usecols = ['measurement_concept_id','value_as_number','person_id', 'measurement_date', 'measurement_time', 'value_as_concept_id'])
> measurement = pd.read_csv('/data/measurement.csv',usecols = ['measurement_concept_id','value_as_number','person_id', 'measurement_date', 'measurement_time'])
170c173
< condition = pd.read_csv("../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/condition_occurrence.csv",usecols = ['condition_concept_id','person_id', 'condition_start_date', 'condition_end_date'])
---
> condition = pd.read_csv("/data/condition_occurrence.csv",usecols = ['condition_concept_id','person_id', 'condition_start_date', 'condition_end_date'])
193c196
< observation = pd.read_csv("../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/observation.csv",usecols = ['observation_concept_id','person_id', 'observation_date'])
---
> observation = pd.read_csv("/data/observation.csv",usecols = ['observation_concept_id','person_id', 'observation_date'])
214c217
< device_exposure = pd.read_csv("../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/device_exposure.csv",usecols = ['device_concept_id','person_id', 'device_exposure_start_date', 'device_exposure_end_date'])
---
> device_exposure = pd.read_csv("/data/device_exposure.csv",usecols = ['device_concept_id','person_id', 'device_exposure_start_date', 'device_exposure_end_date'])
237c240
< drug_exposure = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/drug_exposure.csv',usecols = ['drug_concept_id', 'person_id', 'drug_exposure_start_date', 'drug_exposure_end_date'])
---
> drug_exposure = pd.read_csv('/data/drug_exposure.csv',usecols = ['drug_concept_id', 'person_id', 'drug_exposure_start_date', 'drug_exposure_end_date'])
261c264
< procedure = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/procedure_occurrence.csv',usecols = ['procedure_concept_id', 'person_id', 'procedure_date'])
---
> procedure = pd.read_csv('/data/procedure_occurrence.csv',usecols = ['procedure_concept_id', 'person_id', 'procedure_date'])
280c283
< visit = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/visit_occurrence.csv',usecols = ['visit_concept_id', 'person_id', 'visit_start_date', 'visit_end_date'])
---
> visit = pd.read_csv('/data/visit_occurrence.csv',usecols = ['visit_concept_id', 'person_id', 'visit_start_date', 'visit_end_date'])
308c311
< person = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/person.csv')
---
> person = pd.read_csv('/data/person.csv')
332c335
< #X_ave = np.zeros((len(person_index), n_measurement_types))
---
> X_ave = np.zeros((len(person_index), n_measurement_types))
370,371c373,374
< 	if (subm.empty):
< 		continue
---
>         if (subm.empty):
>                 continue
385c388
<         if (i == '3003694'): #blood group and Rh group 
---
>         if (i == '3003694'): #blood group and Rh group
396c399
<                         #X_ave[index_p][index_f] = X_min[index_p][index_f]
---
>                         X_ave[index_p][index_f] = X_min[index_p][index_f]
405,406c408,409
<         #subm_after_covid_ave = subm_after_covid.groupby('person_id')['value_as_number'].mean()
<         
---
>         subm_after_covid_ave = subm_after_covid.groupby('person_id')['value_as_number'].mean()
> 
409c412
<         #subm_before_covid_ave = subm_before_covid.groupby('person_id')['value_as_number'].mean()
---
>         subm_before_covid_ave = subm_before_covid.groupby('person_id')['value_as_number'].mean()
417c420
<                 #X_ave[index_p][index_f] = subm_after_covid_ave[person_id]
---
>                 X_ave[index_p][index_f] = subm_after_covid_ave[person_id]
424c427
<         
---
> 
429c432
<                 #X_ave[index_p][index_f] = subm_before_covid_ave[person_id]
---
>                 X_ave[index_p][index_f] = subm_before_covid_ave[person_id]
439,440c442,443
<         #le.fit(X_ave[:, index_f])
<         #X_ave[:, index_f] = le.transform(X_ave[:, index_f])
---
>         le.fit(X_ave[:, index_f])
>         X_ave[:, index_f] = le.transform(X_ave[:, index_f])
453c456
<         
---
> 
531c534
<         subm = visit.query('visit_concept_id in @i') 
---
>         subm = visit.query('visit_concept_id in @i')
538c541
<                 X_visit[index_p][index_f] += 1.0 
---
>                 X_visit[index_p][index_f] += 1.0
577,578c580
< X_measurement = X
< #X_measurement = np.concatenate((X, X_ave), axis=1)
---
> X_measurement = np.concatenate((X, X_ave), axis=1)
582c584
< gs = pd.read_csv('../../ehr-dream-challenges/examples/covid19-question-1/synthetic_data/training/goldstandard.csv')
---
> gs = pd.read_csv('/data/goldstandard.csv')
624d625
< #selector = SelectFromModel(estimator=ExtraTreesClassifier(n_estimators=50)).fit(X_selected, Y)
635c636
< scalerfile = '../../model/feature_selector_stage_2.sav'
---
> scalerfile = '/model/feature_selector_stage_2.sav'
643a645,646
> X_remain, X_opt, Y_remain, Y_opt = train_test_split(X_selected, Y, test_size=0.40, stratify=Y)
> 
647d649
< 
648a651
> print('model training done')
650,661c653,664
< dump(clf, '../../model/baseline.joblib')
< dump(one_hot_encoder, '../../model/one_hot_encoder')
< dump(le, '../../model/label_encoder')
< dump(transformer, '../../model/normalizer')
< dump(best_n_features_selected_measurement, '../../model/best_n_features_selected_measurement')
< dump(best_n_features_selected_measurement_2, '../../model/best_n_features_selected_measurement_2')
< dump(best_n_features_selected_condition, '../../model/best_n_features_selected_condition')
< dump(best_n_features_selected_observation, '../../model/best_n_features_selected_observation')
< dump(best_n_features_selected_device_exposure, '../../model/best_n_features_selected_device_exposure')
< dump(best_n_features_selected_drug_exposure, '../../model/best_n_features_selected_drug_exposure')
< dump(best_n_features_selected_procedure, '../../model/best_n_features_selected_procedure')
< dump(best_n_features_selected_visit, '../../model/best_n_features_selected_visit')
---
> dump(clf, '/model/baseline.joblib')
> dump(one_hot_encoder, '/model/one_hot_encoder')
> dump(le, '/model/label_encoder')
> dump(transformer, '/model/normalizer')
> dump(best_n_features_selected_measurement, '/model/best_n_features_selected_measurement')
> dump(best_n_features_selected_measurement_2, '/model/best_n_features_selected_measurement_2')
> dump(best_n_features_selected_condition, '/model/best_n_features_selected_condition')
> dump(best_n_features_selected_observation, '/model/best_n_features_selected_observation')
> dump(best_n_features_selected_device_exposure, '/model/best_n_features_selected_device_exposure')
> dump(best_n_features_selected_drug_exposure, '/model/best_n_features_selected_drug_exposure')
> dump(best_n_features_selected_procedure, '/model/best_n_features_selected_procedure')
> dump(best_n_features_selected_visit, '/model/best_n_features_selected_visit')
664d666
< 
